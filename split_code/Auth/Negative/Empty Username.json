{
  "name": "Empty Username",
  "event": [
    {
      "listen": "test",
      "script": {
        "exec": [
          "const Ajv = require('ajv');\r",
          "const ajv = new Ajv();\r",
          "const jsonData = pm.response.json();\r",
          "\r",
          "const errorSchema = {\r",
          "    type: \"object\",\r",
          "    properties: {\r",
          "        message: {\r",
          "            type: \"string\"\r",
          "        },\r",
          "    },\r",
          "    required: [\"message\"],\r",
          "    additionalProperties: false\r",
          "}\r",
          "\r",
          "const validate = ajv.compile(errorSchema);\r",
          "\r",
          "pm.test(\"Status code is 400\", () => {\r",
          "    pm.response.to.have.status(400);\r",
          "});\r",
          "\r",
          "pm.test(\"Response is valid JSON\", () => {\r",
          "    pm.expect(() => pm.response.json()).to.not.throw();\r",
          "});\r",
          "\r",
          "pm.test(\"Response schema should match the expected format\", () => {\r",
          "    const valid = validate(jsonData);\r",
          "    if (!valid) {\r",
          "        console.lod(validate.errors);\r",
          "    }\r",
          "    pm.expect(valid, JSON.stringify(validate.errors)).to.be.true;\r",
          "});\r",
          "\r",
          "pm.test(\"Response has message property\", () => {\r",
          "    pm.expect(jsonData).to.have.property(\"message\");\r",
          "});\r",
          "\r",
          "pm.test(\"Error message is as expected\", () => {\r",
          "    pm.expect(jsonData.message).to.eql(\"Username and password required\");\r",
          "});\r",
          "\r",
          "pm.test(\"Response time is under 1000ms\", () => {\r",
          "    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
          "});\r",
          "\r",
          "\r",
          "\r",
          "\r",
          ""
        ],
        "type": "text/javascript",
        "packages": {}
      }
    }
  ],
  "request": {
    "method": "POST",
    "header": [],
    "body": {
      "mode": "raw",
      "raw": "{\r\n    \"username\": \"\",\r\n    \"password\": \"emilyspass\"\r\n}",
      "options": {
        "raw": {
          "language": "json"
        }
      }
    },
    "url": {
      "raw": "{{baseUrl}}auth/login",
      "host": [
        "{{baseUrl}}auth"
      ],
      "path": [
        "login"
      ]
    }
  },
  "response": []
}